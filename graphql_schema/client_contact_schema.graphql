scalar JSON

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type ClientContact {
  attributes: JSON
  client_id: ID!
  contact_id: ID!
  id: ID!
  relative_type: String
}

type ClientContactConnection {
  items: [ClientContact]
  nextToken: String
}

type Mutation {
  createClientContact(input: CreateClientContactInput!): ClientContact
  deleteClientContact(input: DeleteClientContactInput!): ClientContact
  updateClientContact(input: UpdateClientContactInput!): ClientContact
}

type Query {
  getClientContact(client_id: ID!, contact_id: ID!): ClientContact
  listClientContacts(filter: TableClientContactFilterInput, limit: Int, nextToken: String): ClientContactConnection
}

type Subscription {
  onCreateClientContact(attributes: JSON, client_id: ID, contact_id: ID, id: ID, relative_type: String): ClientContact @subscribe(mutations : ["createClientContact"])
  onDeleteClientContact(attributes: JSON, client_id: ID, contact_id: ID, id: ID, relative_type: String): ClientContact @subscribe(mutations : ["deleteClientContact"])
  onUpdateClientContact(attributes: JSON, client_id: ID, contact_id: ID, id: ID, relative_type: String): ClientContact @subscribe(mutations : ["updateClientContact"])
}

input CreateClientContactInput {
  attributes: JSON
  client_id: ID!
  contact_id: ID!
  relative_type: String
}

input DeleteClientContactInput {
  id: ID!
}

input TableClientContactFilterInput {
  client_id: ID
  contact_id: ID
  id: ID
  relative_type: String
}

input UpdateClientContactInput {
  attributes: JSON
  client_id: ID
  contact_id: ID
  id: ID!
  relative_type: String
}
