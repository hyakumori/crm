scalar JSON

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Contact {
  id: ID!
  internal_id: String
  profile: JSON
}

type ContactConnection {
  items: [Contact]
  nextToken: String
}

type Mutation {
  createContact(input: CreateContactInput!): Contact
  deleteContact(input: DeleteContactInput!): Contact
  updateContact(input: UpdateContactInput!): Contact
}

type Query {
  getContact(id: ID!): Contact
  listContacts(filter: TableContactFilterInput, limit: Int, nextToken: String): ContactConnection
}

type Subscription {
  onCreateContact(id: ID, internal_id: String, profile: JSON): Contact @subscribe(mutations : ["createContact"])
  onDeleteContact(id: ID, internal_id: String, profile: JSON): Contact @subscribe(mutations : ["deleteContact"])
  onUpdateContact(id: ID, internal_id: String, profile: JSON): Contact @subscribe(mutations : ["updateContact"])
}

input CreateContactInput {
  internal_id: String
  profile: JSON
}

input DeleteContactInput {
  id: ID!
}

input TableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input TableContactFilterInput {
  id: ID!
  internal_id: String
}

input UpdateContactInput {
  id: ID!
  internal_id: String
  profile: JSON
}
