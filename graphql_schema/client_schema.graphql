scalar JSON

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Client {
  attributes: JSON
  id: ID!
  internal_id: String
  profile: JSON
}

type ClientConnection {
  items: [Client]
  nextToken: String
}

type Mutation {
  createClient(input: CreateClientInput!): Client
  deleteClient(input: DeleteClientInput!): Client
  updateClient(input: UpdateClientInput!): Client
}

type Query {
  getClient(id: ID!): Client
  listClients(filter: TableClientFilterInput, limit: Int, nextToken: String): ClientConnection
}

type Subscription {
  onCreateClient(attributes: JSON, id: ID, internal_id: String, profile: JSON): Client @subscribe(mutations : ["createClient"])
  onDeleteClient(attributes: JSON, id: ID, internal_id: String, profile: JSON): Client @subscribe(mutations : ["deleteClient"])
  onUpdateClient(attributes: JSON, id: ID, internal_id: String, profile: JSON): Client @subscribe(mutations : ["updateClient"])
}

input CreateClientInput {
  attributes: JSON
  internal_id: String
  profile: JSON
}

input DeleteClientInput {
  id: ID!
}

input TableClientFilterInput {
  id: ID
  internal_id: String
}

input UpdateClientInput {
  attributes: JSON
  id: ID!
  internal_id: String
  profile: JSON
}
