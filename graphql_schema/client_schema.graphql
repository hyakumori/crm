scalar JSON

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Client {
  attributes: JSON
  id: ID!
  internal_id: String
  profile: JSON
}

type ClientConnection {
  items: [Client]
  nextToken: String
}

type ClientResponse implements HyakumoriResponse {
  ok: Boolean!
  error: JSON
  client: Client
}

type Mutation {
  create_client(data: CreateClientInput!): ClientResponse
  delete_client(id: ID!): ClientResponse
  update_client(data: UpdateClientInput!): ClientResponse
}

type Query {
  get_client(id: ID!): ClientResponse
  list_clients(
    filter: TableClientFilterInput
    limit: Int
    nextToken: String
  ): ClientConnection
}

type Subscription {
  onCreateClient(
    attributes: JSON
    id: ID
    internal_id: String
    profile: JSON
  ): Client @subscribe(mutations: ["createClient"])
  onDeleteClient(
    attributes: JSON
    id: ID
    internal_id: String
    profile: JSON
  ): Client @subscribe(mutations: ["deleteClient"])
  onUpdateClient(
    attributes: JSON
    id: ID
    internal_id: String
    profile: JSON
  ): Client @subscribe(mutations: ["updateClient"])
}

input CreateClientInput {
  internal_id: String
  profile: JSON
  attributes: JSON
}

input TableClientFilterInput {
  id: ID
  internal_id: String
}

input UpdateClientInput {
  id: ID!
  internal_id: String
  profile: JSON
  attributes: JSON
}
